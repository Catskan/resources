---
  ##########################################Aurel-Gaming##########################################- name: Create directory structure
    - name: Create ProgramData structure
      ansible.windows.win_file:
        path: M:\ProgramData
        state: directory

    - name: Sync the contents of one directory to another, and remove any files/directories found in destination that do not exist in the source
      community.windows.win_robocopy:
        src: C:\ProgramData
        dest: M:\ProgramDataTest
        recurse: yes
        flags: /XJ /MIR

    - name: Delete ProgramData
      ansible.windows.win_file:
        path: C:\ProgramData
        state: absent

    - name: Force NTFS Link
      win_shell:
        mklink /J "C:\ProgramData" "M:\ProgramDataTest"
      vars:
        # become is required to save and retrieve the credentials in the tasks
        ansible_become: yes
        ansible_become_user: '{{ ansible_user }}'
        ansible_become_pass: '{{ ansible_password }}'


    - name: Ensure WinRM starts when the system has settled and is ready to work reliably
      win_service:
        name: WinRM
        start_mode: delayed

#Change hostname
    - name: Change Gaming computer hostname
      ansible.windows.win_hostname:
        name: "{{ aurel_gaming_computer_hostname }}"
      register: old_hostname
      when: inventory_hostname == "aurelien-gaming"
      
#Reboot computer
    - name: Reboot Gaming
      ansible.windows.win_reboot:
          test_command: 'exit (Get-Service -Name WinRM).Status -ne "Running"'
      when: inventory_hostname == "aurelien-gaming" and old_hostname.changed == true

#Change power plan
    - name: Change power plan to high performance
      community.windows.win_power_plan:
        name: high performance
      when: inventory_hostname == "aurelien-gaming"

#Set auto logon
    - name: Set autologon for Aurel
      community.windows.win_auto_logon:
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
      #when: inventory_hostname == "aurelien-gaming"

#Disable password expiration
    - name: Disable password expiration of "{{ ansible_user }}"
      ansible.windows.win_user:
        name: "{{ ansible_user }}"
        password_never_expires: yes


#Set RDP
    - name: Allow RDP TSConnection
      ansible.windows.win_regedit:
            path: HKLM:\System\CurrentControlSet\Control\Terminal Server
            name: fDenyTSConnections
            data: 0
            type: dword
    - name: Allow UserAuthentication
      ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp
            name: UserAuthentication
            data: 1
            type: dword
    - name: Allow Client Drives
      ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp
            name: fAutoClientDrives
            data: 1
            type: dword
    - name: Change RDP Port
      ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp
            name: PortNumber
            data: "{{ remote_desktop_port }}"
            type: dword
    - name: Add user to Remote Desktop Group
      ansible.windows.win_group_membership:
        name: Remote Desktop Users
        members:
          - "{{ user_name }}"
        state: present
    - name: Enable RDP inside the Firewall
      community.windows.win_firewall_rule:
        name: Remote Desktop
        localport: "{{ remote_desktop_port }}"
        action: allow
        direction: in
        protocol: tcp
        profiles: private
        state: present
        enabled: yes

#Reboot computer
    - name: Reboot Gaming
      ansible.windows.win_reboot:
          test_command: 'exit (Get-Service -Name WinRM).Status -ne "Running"'
      when: inventory_hostname == "aurelien-gaming" and old_hostname.changed == true

##########################################Change hostname##########################################
    - name: Change W11 VM Aurel hostname
      ansible.windows.win_hostname:
        name: "{{ w11_vm_computer_hostname }}"
      register: old_hostname
      when: inventory_hostname == "w11-vm-aurel"

    - name: Reboot W11-VM-Aurel
      ansible.windows.win_reboot:
          test_command: 'exit (Get-Service -Name WinRM).Status -ne "Running"'
      when: inventory_hostname == "w11-vm-aurel" and old_hostname.changed == true


  ##########################################Mount WebDAV##########################################
    - name: Create mapped drive with credentials and save the username and password
      block:
      - name: Save the network credentials required for the mapped drive
        community.windows.win_credential:
          name: nas.eonelia.cloud
          type: generic_password
          username: '{{ nas_username }}'
          secret: '{{ nas_password }}'
          state: present
          persistence: enterprise
      # - name: Create a mapped drive that requires authentication
      #   win_mapped_drive:
      #     letter: W
      #     path: '\\{{ nas_url }}@SSL@8171\Aurelien'
      #     state: present
      vars:
        # become is required to save and retrieve the credentials in the tasks
        ansible_become: yes
        ansible_become_method: runas
        ansible_become_user: '{{ ansible_user }}'
        ansible_become_pass: '{{ ansible_password }}'

    - name: Save Microsoft Account Credentials to Credentials Store
      block:
      - name: Save the network credentials required for the mapped drive
        community.windows.win_credential:
          name: 'MicrosoftAccount:user=aurel130492@gmail.com'
          type: generic_password
          username: '{{ microsoft_account_email }}'
          secret: '{{ microsoft_account_password }}'
          state: present
          persistence: local
      vars:
        ansible_become: yes
        ansible_become_method: runas
        ansible_become_user: '{{ ansible_user }}'
        ansible_become_pass: '{{ ansible_password }}'

    - name: Enable WakeOnMagic Packet
      win_shell:
        (Get-NetConnectionProfile).InterfaceIndex 
        # Write-Host $iid
        # Enable-NetAdapterPowerManagement -InterfaceID 5 -WakeOnMagicPacket True 
      register: interfaceIndex
      vars:
        # become is required to save and retrieve the credentials in the tasks
        ansible_become: yes
        ansible_become_user: '{{ ansible_user }}'
        ansible_become_pass: '{{ ansible_password }}'
    - debug:
        var: interfaceIndex.stdout
  #     - name: Create a mapped drive that requires authentication
  #       win_mapped_drive:
  #         letter: N
  #         path: 'https://nas.mapn.fr:8171/Aurelien'
  #         state: present
  #     vars:
  #       # become is required to save and retrieve the credentials in the tasks
  #       ansible_become: yes
  #       ansible_become_method: runas
  #       ansible_become_user: '{{ ansible_user }}'
  #       ansible_become_pass: '{{ ansible_password }}'

    - name: Disable Nahimic Service
      ansible.windows.win_service:
        name: NahimicService
        start_mode: disabled
        state: stopped

  ##########################################Install all Windows Updates##########################################
    # - name: Unregister Scheduled job if one exists
    #   win_shell: 'Start-Process powershell.exe -ArgumentList "-Command  `"&{`Unregister-ScheduledJob  -name ansible-win-updates;}`"" -Wait -verb RunAs'

    - name: Install all updates and reboot as many times as needed
      ansible.windows.win_updates:
        category_names: '*'
        reboot: yes
        reboot_timeout: 3600

    - name: Turn off UAC
      win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\system
        name: EnableLUA
        data: 0
        type: dword
        state: present
      register: output_uac
 
    - name: Reboot to apply UAC Turned off
      win_reboot:
      when: output_uac is changed