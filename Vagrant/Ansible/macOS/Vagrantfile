# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  config.env.enable
  config.vm.define "#{ContainerName}#" do
  config.vm.provider "docker" do |d, docker|
    d.name = "#{ContainerName}#"
    d.image = "#{ImageTag}#"
    d.env = {
      "AWS_ACCESS_KEY_ID" => ENV['AWS_ACCESS_KEY_ID'],
      "AWS_SECRET_ACCESS_KEY" => ENV['AWS_SECRET_ACCESS_KEY'],
      "AWS_DEFAULT_REGION" => ENV['AWS_DEFAULT_REGION'],
      "BW_CLIENTID" => ENV['BW_CLIENTID'],
      "BW_CLIENTSECRET" => ENV['BW_CLIENTSECRET'],
      "BW_SESSION" => ENV['BW_SESSION']
            }
    config.vm.provision "docker" do |d, docker|
      #d.post_install_provision "shell", path: "./prepare_ansible_env.sh"
      config.vm.hostname = "#{ContainerName}#"
    end
    docker.vm.network :private_network, type: "dhcp", docker_network__internal: true
    #docker.vm.network :public_network, type: "dhcp", bridge: "eth0", docker_network__ip_range: "192.168.1.100/30"
  end

 
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.

  #config.vm.synced_folder "/Users/aurelien/.ssh", "/.ssh", docker_consistency: "cached"


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = true

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"



  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #config.vm.synced_folder ".", "/vagrant", type: "smb", smb_host: "127.0.0.1"
  config.vm.synced_folder "/Users/aurelien/git/resources/", "/share/git/resources/", docker_consistency: "cached"
  config.vm.synced_folder "/Users/aurelien/git/resources/Containers/Linux/Debian-Ansible/.ssh", "/.ssh_keys", docker_consistency: "cached"
  #config.vm.synced_folder "/Users/aurelien/git/resources/Containers/Linux/Debian-Ansible/.mapn", "/etc/ca-certificates", docker_consistency: "cached"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  



  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  #config.vm.provision "shell", path: "./prepare_ansible_env.sh"
end
end
