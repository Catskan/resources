---
parameters:
- name: environment
  displayName: Environment
  type: string
  default:
    azTenant1-env1
  values:
    - azTenant1-env1
    - azTenant2-env1

- name: ElasticAgentImageTag
  displayName: Elastic-Agent Image Version
  type: string
  default: ' '
- name: IngressControllerImageTag
  displayName: NGINX Ingress Controller Image Version
  type: string
  default: ' '
- name: CertManagerImageTag
  displayName: Cert-Manager Image Version
  type: string
  default: ' '
- name: deployElasticAgent
  displayName: Deploy Elastic Agent
  type: string
  default: 'False'
- name: deployIngressControllerCluster1
  displayName: Deploy NGINX Ingress Controller for VantageDX
  type: string
  default: 'False'
- name: deployIngressControllerCbmt
  displayName: Deploy NGINX Ingress Controller for CBMT
  type: string
  default: 'False'
- name: deployCertManager
  displayName: Deploy Cert-Manager
  type: string
  default: 'False'

trigger: none
pr: none

variables:
- template: ./variables/environments/env-vars-${{ parameters.environment }}.yaml
- template: ./variables/pipelines/static/pipelines-vars-${{ parameters.environment }}.yaml
- template: ./variables/pipelines/runtime/deploy-input-vars.yaml
  parameters:
    IngressControllerImageTag: ${{ parameters.IngressControllerImageTag }}
    CertManagerImageTag: ${{ parameters.CertManagerImageTag }}
    ElasticAgentImageTag: ${{ parameters.ElasticAgentImageTag }}

stages:
### INGRESS CONTROLLER CREATION FOR VANTAGEDX###
- stage: Ingress_Controller_VantageDX
  condition: eq(${{ parameters.deployIngressControllerCluster1 }}, 'True')
  jobs:
    - template: ./pipelines-jobs/deploy/kubernetes-modules/ingress-controller-vantagedx.yaml
### CERT-MANAGER DEPLOYMENT ###
- stage: Cert_Manager_Deployment
  dependsOn: Ingress_Controller_VantageDX
  condition: eq(${{ parameters.deployCertManager }}, 'True')
  jobs:
    - template: ./pipelines-jobs/deploy/kubernetes-modules/cert-manager.yaml
### ELASTIC AGENT DEPLOYMENT ###
- stage: Elastic_Agent_Deployment
  dependsOn: Cert_Manager_Deployment
  condition: eq(${{ parameters.deployElasticAgent }}, 'True')
  jobs:
    - template: ./pipelines-jobs/deploy/kubernetes-modules/elastic-agent.yaml
